/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package employeedataapp.ui;

import employeedataapp.model.Employee;
import employeedataapp.model.EmployeeData;
import java.util.ArrayList;
import javax.swing.JTabbedPane;
import javax.swing.JTable;
import javax.swing.RowFilter;
import javax.swing.SwingUtilities;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Sayali Dalvi
 */
public class ViewEmployeePanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewEmployeePanel
     */
    
    public EmployeeData employeeData;
    public static final String COLUMNS[] = {"ID", "NAME", "GENDER", "LEVEL", "TEAM"};
    private DefaultTableModel tableModel;
    
    public UpdateJFrame updateJFrame;
    public UpdateJPanel updateJPanel;
    
    public ViewEmployeePanel() {
        initComponents();
    }

    public ViewEmployeePanel(EmployeeData employeeData) {
        initComponents();
        this.employeeData = employeeData;
        initialiseTable(this.employeeData);
        
    }
    
    public void initialiseTable(EmployeeData employeeData){
        String[][] data = new String[employeeData.getEmployeeList().size()][5];
        int i=0;
        for( Employee employee : employeeData.getEmployeeList()){
            data[i][0] = String.valueOf(employee.getEmployeeId());
            data[i][1] = employee.getName();
            data[i][2] = employee.getGender();
            data[i][3] = employee.getLevel();
            data[i][4] = employee.getTeamInfo();
//            System.out.println("Row Data : "+data[i][0]+data[i][1]+data[i][2]+data[i][3]+data[i][4]);
            i++;
        }
 
        // Initializing the JTable
        tableModel = new DefaultTableModel(data, COLUMNS);
        jTable1.setModel(tableModel);
        
    }
    
    
    public Employee searchEmployee(long id){
        for(Employee emp : employeeData.getEmployeeList()){
            if(emp.getEmployeeId() == id){
                return emp;
            }
        }
        return null;
    }
    
    //Filter table data
    public void filter(String query){
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<>(tableModel);
        jTable1.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(query));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jQueryTextField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable1);

        jQueryTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jQueryTextFieldActionPerformed(evt);
            }
        });
        jQueryTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jQueryTextFieldKeyReleased(evt);
            }
        });

        jLabel2.setText("Search  :");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(141, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(30, 30, 30)
                .addComponent(jQueryTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 508, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(189, 189, 189))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jQueryTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        
            long employeeId = Long.parseLong(jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString());
            System.out.println("employee id = "+employeeId);
            
            //Add and open details tab to the tabbed pane
            JTabbedPane parent = (JTabbedPane) SwingUtilities.getAncestorOfClass(JTabbedPane.class, this);
            updateJPanel = new UpdateJPanel(employeeData, searchEmployee(employeeId));
            updateJPanel.setVisible(true);
            parent.add("Details", updateJPanel);
            updateJPanel.setEmployee(searchEmployee(employeeId));
            parent.setSelectedIndex(2);
//            new UpdateJFrame(employeeData,searchEmployee(employeeId));
        
    }//GEN-LAST:event_jTable1MouseClicked

    private void jQueryTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jQueryTextFieldKeyReleased
        // TODO add your handling code here:
        String query = jQueryTextField.getText();
        filter(query);
    }//GEN-LAST:event_jQueryTextFieldKeyReleased

    private void jQueryTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jQueryTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jQueryTextFieldActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField jQueryTextField;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
